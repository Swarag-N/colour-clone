{"version":3,"sources":["Palette/Styles/ColorBoxStyles.js","Palette/ColorBox.js","Palette/NavBar.js","Palette/Styles/NavBarStyles.js","Palette/PaletteFooter.js","Palette/Styles/PaletteFooter.js","Palette/Styles/PaletteStyles.js","Palette/Palette.js","Palette/MiniPalette.js","Palette/Styles/MiniPaletteStyles.js","Palette/PaletteList.js","Palette/Styles/PaletteListStyles.js","Palette/SingleColourPalette.js","Palette/DragableColorBox.js","Palette/DragableColorBoxList.js","Palette/PaleteMetaForm.js","Palette/PaletteFormNavbar.js","Palette/ColorPickerForm.js","Palette/NewPaletteForm.js","seedColors.js","Palette/ColorHelper.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","display","height","props","showingFullPalette","width","cursor","position","margin","marginBottom","opacity","copyText","color","chroma","background","luminance","colourName","boxConatiner","left","bottom","padding","letterSpacing","textTransform","fontSize","seeMore","border","right","textAlign","lineHeight","copyButton","marginLeft","marginTop","top","outline","textDecoration","copyOverlay","zIndex","transition","transform","show","copyMessage","justifyContent","alignItems","flexDirection","textShadow","fontWeight","showMessage","transitionDelay","state","copied","handleCopyState","bind","this","setState","setTimeout","name","paletteId","id","classes","text","onCopy","className","style","to","onClick","evt","stopPropagation","Component","withStyles","styles","NavBar","format","open","handleSelectChange","handleSnackbarClose","target","value","handleFormatChange","level","handleLevelChange","showSlider","logo","slider","step","min","max","defaultValue","onAfterChange","selectContainer","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","toUpperCase","ContentProps","action","IconButton","key","aria-label","marginRight","fontFamily","backgroundColor","PaletteFooter","emoji","paletteName","Palette","PaletteColors","goBack","val","palette","colors","colourBoxes","every","colour","push","root","borderRadius","overflow","title","paddingTop","miniColor","handleClick","miniColors","map","PaletteList","history","palettes","container","nav","redirectToPallete","flexWrap","boxSizing","gridTemplateColumns","gridGap","SingleColourPalette","_shades","extarctColours","colorId","colourID","colourData","allColurs","levelKey","match","filter","eachColour","splice","colorBoxes","colourShade","DragableColorBox","SortableElement","deleteColor","boxContent","deleteIcon","DragableColorBoxList","SortableContainer","colours","i","index","PaleteMetaForm","handleClickOpen","handleClose","newPaletteName","handleNameChange","showEmojiPicker","savePalette","ValidatorForm","addValidationRule","toLowerCase","newPalette","native","console","log","handleSavePalete","hideForm","Dialog","DialogTitle","onSelect","aria-labelledby","ref","onSubmit","DialogContent","DialogContentText","label","fullWidth","validators","errorMessages","DialogActions","Button","variant","type","PaletteFormNavbar","showingDialogForm","showForm","CssBaseline","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","handleDrawerOpen","menuButton","hide","Typography","noWrap","navButtons","button","theme","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","withTheme","ColorPickerForm","currentColor","newColorName","handleUpadteColor","handleSubmitColor","hex","colorNew","addColourToState","isPaletteFull","picker","onChangeComplete","colorNameInput","disabled","addColor","NewPaletteForm","handleDrawerClose","onSortEnd","oldIndex","newIndex","arrayMove","clearPalette","addRandomColor","colorName","allColours","p","flat","randomColor","Math","floor","random","length","st","replace","savePalete","maxColours","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","gutterBottom","buttons","content","contentShift","axis","defaultProps","flexShrink","mixins","toolbar","flexGrow","spacing","levels","generatePalette","starterPalette","hexColor","numberOfColors","scale","darken","getRange","mode","reverse","rgb","css","rgba","App","findPaletteById","find","basename","exact","path","render","routeProps","params","colorID","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"oWACe,GACXA,SAAS,CACLC,QAAS,eAETC,OAAQ,SAAAC,GAAK,OAAGA,EAAMC,mBAAmB,MAAM,OAC/CC,MAAO,MACPC,OAAQ,UACRC,SAAU,WACVC,OAAQ,SACRC,aAAc,SACd,iBAAiB,CACbC,QAAQ,IAGhBC,SAAS,CACLC,MAAM,SAAAT,GAAK,OACPU,IAAOV,EAAMW,YAAYC,YAAY,GAAI,QAAQ,UAEzDC,WAAW,CACPJ,MAAO,SAAAT,GAAK,OAAGU,IAAOV,EAAMW,YAAYC,YAAY,IAAK,UAE7DE,aAAa,CACTV,SAAU,WACVF,MAAO,OACPa,KAAM,MACNC,OAAQ,MACRC,QAAS,OACTR,MAAO,QACPS,cAAe,MACfC,cAAe,YACfC,SAAU,QAEdC,QAAQ,CACJZ,MAAM,SAAAT,GAAK,OAAGU,IAAOV,EAAMW,YAAYC,YAAY,GAAI,QAAQ,SAC/DD,WAAY,2BACZP,SAAU,WACVkB,OAAQ,OACRC,MAAO,MACPP,OAAQ,MACRd,MAAO,OACPH,OAAQ,OACRyB,UAAW,SACXC,WAAY,OACZN,cAAe,aAEnBO,WAAW,CACPjB,MAAM,SAAAT,GAAK,OAAGU,IAAOV,EAAMW,YAAYC,YAAY,GAAI,QAAQ,SAC/DD,WAAY,yBACZQ,cAAc,YACdrB,QAAS,eACTI,MAAM,QACNH,OAAQ,OACRK,SAAU,WACVuB,WAAW,QACXC,UAAW,QACXC,IAAK,MACLd,KAAM,MACNK,SAAU,OACVK,WAAY,OACZK,QAAS,OACTR,OAAQ,OACRE,UAAW,SACXO,eAAgB,OAChBxB,QAAQ,GAEZyB,YAAY,CACZzB,QAAS,IACT0B,OAAQ,IACR/B,MAAO,OACPH,OAAQ,OACRmC,WAAY,6BACZC,UAAW,cAEXC,KAAK,CACDD,UAAW,YACX5B,QAAS,IACT0B,OAAQ,KACR7B,SAAU,YAEdiC,YAAY,CACRF,UAAW,aACXG,eAAgB,SAChBlC,SAAU,QACVW,KAAM,IACNQ,MAAO,IACPM,IAAK,IACLb,OAAQ,IACRlB,QAAS,OACTyC,WAAY,SACZC,cAAe,SACfpB,SAAU,OACVb,QAAS,IACTE,MAAO,QACP,OAAO,CACHgC,WAAY,gBACZ9B,WAAY,2BACZT,MAAO,OACPwC,WAAY,MACZlB,UAAW,SACXlB,aAAc,IACdW,QAAS,OACTE,cAAe,aAEnB,MAAM,CACFC,SAAU,OACVsB,WAAW,QAGnBC,YAAY,CACRpC,QAAS,IACT4B,UAAW,WACXF,OAAQ,KACRC,WAAY,uBACZU,gBAAiB,SCzGnB/C,E,kDACF,WAAYG,GAAO,IAAD,8BACd,cAAMA,IACD6C,MAAM,CACPC,QAAO,GAEX,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBALT,E,8DAOA,IAAD,OACbC,KAAKC,SAAS,CAACJ,QAAO,IAAM,WACxBK,YAAW,kBAAI,EAAKD,SAAS,CAACJ,QAAO,MAAQ,U,+BAG3C,IAAD,EAC4DG,KAAKjD,MAA/DW,EADF,EACEA,WAAWyC,EADb,EACaA,KAAKC,EADlB,EACkBA,UAAUC,EAD5B,EAC4BA,GAAGrD,EAD/B,EAC+BA,mBAAmBsD,EADlD,EACkDA,QAChDT,EAAUG,KAAKJ,MAAfC,OAGP,OACI,kBAAC,kBAAD,CAAiBU,KAAM7C,EAAY8C,OAAQR,KAAKF,iBAChD,yBAAKW,UAAWH,EAAQ1D,SAAU8D,MAAO,CAAChD,eACtC,yBAAK+C,UAAS,UAAKH,EAAQvB,YAAb,YAA4Bc,GAAUS,EAAQnB,MAAQuB,MAAO,CAAChD,gBAExE,yBAAK+C,UAAS,UAAKH,EAAQlB,YAAb,YAA4BS,GAAUS,EAAQZ,cACxD,uCACA,uBAAGe,UAAWH,EAAQ/C,UAAWG,IAGrC,6BACI,yBAAK+C,UAAWH,EAAQzC,cACpB,0BAAM4C,UAAWH,EAAQ1C,YAAauC,IAG1C,4BAAQM,UAAWH,EAAQ7B,YAA3B,SAGHzB,GACG,kBAAC,IAAD,CAAM2D,GAAE,mBAAcP,EAAd,YAA2BC,GAAMO,QAAS,SAAAC,GAAG,OAAEA,EAAIC,oBACvD,0BAAML,UAAWH,EAAQlC,SAAzB,e,GAtCL2C,aAiDRC,cAAWC,EAAXD,CAAmBpE,G,+DCxC5BsE,G,yDACF,WAAYnE,GAAO,IAAD,8BACd,cAAMA,IACD6C,MAAM,CACPuB,OAAO,MACPC,MAAK,GAET,EAAKC,mBAAqB,EAAKA,mBAAmBtB,KAAxB,gBAC1B,EAAKuB,oBAAsB,EAAKA,oBAAoBvB,KAAzB,gBAPb,E,+DASCc,GACfb,KAAKC,SAAS,CAACkB,OAAON,EAAIU,OAAOC,MAAMJ,MAAK,IAC5CpB,KAAKjD,MAAM0E,mBAAmBZ,EAAIU,OAAOC,S,4CAIzCxB,KAAKC,SAAS,CAACmB,MAAK,M,+BAGd,IAAD,EACkDpB,KAAKjD,MAArD2E,EADF,EACEA,MAAOC,EADT,EACSA,kBAAmBC,EAD5B,EAC4BA,WAAWtB,EADvC,EACuCA,QADvC,EAEiBN,KAAKJ,MAApBwB,EAFF,EAEEA,KAAKD,EAFP,EAEOA,OACZ,OACI,4BAAQV,UAAWH,EAAQY,QACvB,yBAAKT,UAAWH,EAAQuB,MACpB,kBAAC,IAAD,CAAMlB,GAAG,KAAT,iBAEHiB,GACG,yBAAKnB,UAAU,oBACX,uCACWiB,GAEX,yBAAKjB,UAAWH,EAAQwB,QACpB,kBAAC,IAAD,CACIC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,aAAcR,EACdS,cAAeR,MAI/B,yBAAKlB,UAAWH,EAAQ8B,iBACpB,kBAACC,EAAA,EAAD,CAAQb,MAAOL,EAAQmB,SAAUtC,KAAKqB,oBAClC,kBAACkB,EAAA,EAAD,CAAUf,MAAM,OAAhB,iBACA,kBAACe,EAAA,EAAD,CAAUf,MAAM,OAAhB,0BACA,kBAACe,EAAA,EAAD,CAAUf,MAAM,QAAhB,kCAGR,kBAACgB,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAS,SAAUC,WAAW,QAC9CvB,KAAMA,EACNwB,iBAAkB,KAClBC,QAAS7C,KAAKsB,oBACdwB,QAAS,0BAAMzC,GAAG,cAAT,qBAAyCc,EAAO4B,eACzDC,aAAc,CACV,mBAAmB,cAEvBC,OACI,kBAACC,EAAA,EAAD,CACItC,QAASZ,KAAKsB,oBACd9D,MAAM,UACN2F,IAAI,QACJC,aAAW,SACX,kBAAC,IAAD,c,GAhEPrC,cA0ENC,cC5FD,CACV,OAAS,CACLnE,QAAS,OACTyC,WAAY,SACZD,eAAgB,aAChBvC,OAAQ,OAIZ+E,KAAK,CACDwB,YAAa,GACbrF,QAAS,SAETG,SAAU,GACVmF,WAAY,UAEZC,gBAAiB,UACjBzG,OAAQ,OACRD,QAAS,OACTyC,WAAY,SACZ,MAAM,CACFR,eAAgB,OAChBtB,MAAO,UAIfsE,OAAO,CACH7E,MAAO,IACPG,OAAQ,SACRP,QAAS,eACT,qBAAqB,CACjB0G,gBAAiB,eAErB,sEAAsE,CAClE1E,QAAS,OACTR,OAAQ,SAGhB+D,gBAAgB,CACZ1D,WAAY,OACZ2E,YAAa,SDoDNrC,CAAmBE,GE9EnBF,kBCdA,CACXwC,cAAc,CACVnE,eAAgB,WAChBxC,QAAS,OACTyC,WAAY,SACZxC,OAAQ,MACR2C,WAAY,OACZ8D,gBAAiB,SAErBE,MAAM,CACFtF,SAAU,OACVf,OAAQ,cDGD4D,EAVf,SAAuBjE,GAAO,IACnB2G,EAA6B3G,EAA7B2G,YAAYD,EAAiB1G,EAAjB0G,MAAMnD,EAAWvD,EAAXuD,QACzB,OACI,4BAAQG,UAAWH,EAAQkD,eACtBE,EACD,0BAAMjD,UAAWH,EAAQmD,OAAQA,OET/B,GACVE,QAAQ,CACJ7G,OAAQ,OACRD,QAAS,OACT0C,cAAe,UAEnBqE,cAAc,CACV9G,OAAQ,OAEZ+G,OAAO,CACHhH,QAAS,eAETC,OAAO,MACPG,MAAO,MACPC,OAAQ,UACRC,SAAU,WACVC,OAAQ,SACRC,aAAc,SACdC,QAAQ,EACRiG,gBAAiB,QAEjB,MAAM,CACF/F,MAAM,QACNE,WAAY,yBACZQ,cAAc,YACdrB,QAAS,eACTI,MAAM,QACNH,OAAQ,OACRK,SAAU,WACVuB,WAAW,QACXC,UAAW,QACXC,IAAK,MACLd,KAAM,MACNK,SAAU,OACVK,WAAY,OACZK,QAAS,OACTR,OAAQ,OACRE,UAAW,SACXO,eAAgB,UC5BtB6E,E,kDACF,WAAY5G,GAAO,IAAD,8BACd,cAAMA,IACD6C,MAAO,CACR8B,MAAM,IACNP,OAAO,OAEX,EAAKQ,kBAAoB,EAAKA,kBAAkB5B,KAAvB,gBACzB,EAAK0B,mBAAqB,EAAKA,mBAAmB1B,KAAxB,gBAPZ,E,8DASA2B,GACd1B,KAAKC,SAAS,CAACyB,Y,yCAGAoC,GACf9D,KAAKC,SAAS,CAACkB,OAAO2C,M,+BAGhB,IAAD,EACiC9D,KAAKjD,MAAMgH,QAA1CC,EADF,EACEA,OAAON,EADT,EACSA,YAAYD,EADrB,EACqBA,MAAMpD,EAD3B,EAC2BA,GACzBC,EAAWN,KAAKjD,MAAhBuD,QAFF,EAGkBN,KAAKJ,MAArB8B,EAHF,EAGEA,MAAMP,EAHR,EAGQA,OACT8C,EAAc,GAalB,OAZAD,EAAOtC,GAAOwC,OAAM,SAAAC,GAAM,OACtBF,EAAYG,KACR,kBAAC,EAAD,CACI1G,WAAYyG,EAAOhD,GACnBhB,KAAMgE,EAAOhE,KACbgD,IAAKgB,EAAO9D,GACZA,GAAI8D,EAAO9D,GACXD,UAAWC,EACXrD,oBAAkB,QAK1B,yBAAKyD,UAAWH,EAAQqD,SACpB,kBAAC,EAAD,CACIjC,MAAOA,EACPC,kBAAmB3B,KAAK2B,kBACxBR,OAAQA,EACRM,mBAAoBzB,KAAKyB,mBACzBG,YAAU,IACd,yBAAKnB,UAAWH,EAAQsD,eACnBK,GAEL,kBAAC,EAAD,CACIP,YAAaA,EACbD,MAAOA,S,GAhDL1C,aAuDPC,cAAWC,EAAXD,CAAmB2C,G,SCxCnB3C,kBCzBA,CACXqD,KAAM,CAEJ3G,WAAY,QACZW,OAAO,kBACPiG,aAAa,MACbtG,QAAQ,SACRb,SAAS,WACToH,SAAS,SACT,UAAU,CACNrH,OAAO,YAIb8G,OAAO,CAEHT,gBAAiB,UACjBzG,OAAQ,QACRG,MAAO,OACPqH,aAAc,MACdC,SAAU,UAGdC,MAAM,CACF3H,QAAQ,OACRwC,eAAe,gBACfC,WAAW,SACXlC,OAAO,IACP,MAAQ,QACRqH,WAAW,SACXtG,SAAU,OACVhB,SAAU,YAEdsG,MAAM,CACF/E,WAAY,SACZP,SAAU,UAEduG,UAAW,CACP5H,OAAQ,MACRG,MAAO,MACPJ,QAAS,eACTO,OAAQ,SACRD,SAAU,WACVE,aAAc,WDlBP2D,EArBf,SAAqBjE,GAAO,IACjBuD,EAAgDvD,EAAhDuD,QAAQoD,EAAwC3G,EAAxC2G,YAAYM,EAA4BjH,EAA5BiH,OAAOP,EAAqB1G,EAArB0G,MAAMkB,EAAe5H,EAAf4H,YACpCC,EAAaZ,EAAOa,KAAI,SAAAV,GAAM,OAC9B,yBAAK1D,UAAWH,EAAQoE,UAAWhE,MAAO,CAAC6C,gBAAgBY,EAAO3G,OAAQ2F,IAAKgB,EAAOhE,UAI1F,OACI,yBAAKM,UAAWH,EAAQ+D,KAAMzD,QAAS+D,GACnC,yBAAKlE,UAAWH,EAAQ0D,QACnBY,GAEL,yBAAKnE,UAAWH,EAAQkE,OAAQd,EAC5B,0BAAMjD,UAAWH,EAAQmD,OACpBA,QEXfqB,E,gLACgBzE,GACdL,KAAKjD,MAAMgI,QAAQX,KAAnB,mBAAoC/D,M,+BAE9B,IAAD,SACsBL,KAAKjD,MAAzBiI,EADF,EACEA,SAAS1E,EADX,EACWA,QAChB,OACI,yBAAKG,UAAWH,EAAQ+D,MACpB,yBAAK5D,UAAWH,EAAQ2E,WACpB,yBAAKxE,UAAWH,EAAQ4E,KACpB,6CACA,kBAAC,IAAD,CAAMvE,GAAG,gBAAT,yBAEJ,yBAAKF,UAAWH,EAAQ0E,UAEpBA,EAASH,KACL,SAAAd,GAAO,OACH,kBAAC,EAAD,iBAAiBA,EAAjB,CAA0BY,YAAa,kBAAI,EAAKQ,kBAAkBpB,EAAQ1D,KAAK8C,IAAKY,EAAQ1D,gB,GAjBlGU,aA8BXC,cCrCD,CACVqD,KAAM,CACFd,gBAAiB,OACjBzG,OAAQ,QACRD,QAAS,OACTyC,WAAY,aACZD,eAAgB,UAEpB4F,UAAW,CACPhI,MAAO,MACPJ,QAAS,OACTyC,WAAY,aACZC,cAAe,SACf6F,SAAU,QAEdF,IAAK,CACDrI,QAAS,OACTI,MAAO,OACPoC,eAAgB,gBAChB7B,MAAO,QACP8B,WAAW,SACX,MAAM,CACFR,eAAe,OACftB,MAAO,UAGfwH,SAAU,CACNK,UAAW,aACXpI,MAAO,OACPJ,QAAS,OACTyI,oBAAqB,iBACrBC,QAAS,ODMFvE,CAAmB8D,GE3B5BU,E,kDACF,WAAYzI,GAAO,IAAD,8BACd,cAAMA,IACD6C,MAAM,CACPuB,OAAO,OAGX,EAAKsE,QAAS,EAAKC,eAAe,EAAK3I,MAAMgH,QAAQ,EAAKhH,MAAM4I,SAChE,EAAKlE,mBAAqB,EAAKA,mBAAmB1B,KAAxB,gBAPZ,E,2DAUHgE,EAAQ6B,GACnB,IAAIC,EAAa,GACbC,EAAY/B,EAAQC,OAExB,IAAK,IAAI+B,KAAYD,EAAU,CAC3B,IAAIE,EAAQF,EAAUC,GAAUE,QAC5B,SAAAC,GAAU,OAAEA,EAAW7F,KAAKuF,KAEhCC,EAAWzB,KAAK4B,EAAM,IAG1B,OAAOH,EAAWM,OAAO,K,yCAGVrC,GACf9D,KAAKC,SAAS,CAACkB,OAAO2C,M,+BAGhB,IAAD,EACwB9D,KAAKjD,MAAMgH,QAAjCL,EADF,EACEA,YAAYD,EADd,EACcA,MAAMpD,EADpB,EACoBA,GAClBc,EAAUnB,KAAKJ,MAAfuB,OACAb,EAAWN,KAAKjD,MAAhBuD,QACH8F,EAAapG,KAAKyF,QAAQZ,KAAI,SAAAwB,GAAW,OACrC,kBAAC,EAAD,CACI3I,WAAY2I,EAAYlF,GACxBhB,KAAMkG,EAAYlG,KAClBnD,oBAAoB,EACpBmG,IAAKkD,EAAYlG,UAG7B,OACI,yBAAKM,UAAWH,EAAQqD,SACpB,kBAAC,EAAD,CACIlC,mBAAoBzB,KAAKyB,mBACzBG,YAAY,IAEhB,yBAAKnB,UAAWH,EAAQsD,eACnBwC,EACD,yBAAK3F,UAAWH,EAAQuD,QACpB,kBAAC,IAAD,CAAMlD,GAAE,mBAAcN,GAAMI,UAAU,eAAtC,aAGR,kBAAC,EAAD,CACIiD,YAAaA,EACbD,MAAOA,S,GAvDO1C,aA6DnBC,cAAWC,EAAXD,CAAmBwE,G,uIClC5Bc,GAAkBC,cAAgB,SAACxJ,GAAU,IACxCuD,EAAkCvD,EAAlCuD,QAAQ9C,EAA0BT,EAA1BS,MAAM2C,EAAoBpD,EAApBoD,KAAKqG,EAAezJ,EAAfyJ,YAC1B,OACI,yBAAK/F,UAAWH,EAAQgG,iBAAkB5F,MAAO,CAAC6C,gBAAgB/F,IAC9D,yBAAKiD,UAAWH,EAAQmG,YACpB,8BAAOtG,GACP,kBAAC,KAAD,CAAmBM,UAAWH,EAAQoG,WAAY9F,QAAS4F,SAM3DxF,eA3CH,CACTsF,iBAAiB,CACbzJ,QAAS,eACTC,OAAQ,MACRG,MAAO,MACPC,OAAQ,UACRC,SAAU,WACVC,OAAQ,SACRC,aAAc,SACd,cAAe,CACXG,MAAO,QACP0B,UAAW,eAGnBuH,WAAW,CACPtJ,SAAU,WACVF,MAAO,OACPa,KAAM,MACNC,OAAQ,MACRC,QAAS,OACTR,MAAO,QACPS,cAAe,MACfC,cAAe,YACfC,SAAU,OACVtB,QAAQ,OACRwC,eAAe,iBAEnBqH,WAAY,CACRzH,WAAY,yBAeJ+B,CAAmBsF,IC5BpBK,GAjBcC,cAAkB,YAA2B,IAAzBC,EAAwB,EAAxBA,QAAQL,EAAgB,EAAhBA,YACrD,OACI,yBAAK9F,MAAO,CAAC5D,OAAO,SACf+J,EAAQhC,KAAI,SAACV,EAAO2C,GAAR,OACT,kBAAC,GAAD,CACIC,MAAOD,EACPtJ,MAAO2G,EAAO3G,MACd2C,KAAMgE,EAAOhE,KACbgD,IAAKgB,EAAOhE,KACZqG,YAAa,kBAAIA,EAAYrC,EAAOhE,gB,iIC4GzC6G,G,kDAzGX,WAAYjK,GAAO,IAAD,8BACd,cAAMA,IAuCVkK,gBAAkB,WACd,EAAKhH,SAAS,CACVmB,MAAK,KA1CK,EA8ClB8F,YAAc,WACV,EAAKjH,SAAS,CACVmB,KAAK,UA9CT,EAAKxB,MAAM,CACPwB,KAAK,OAEL+F,eAAe,IAEnB,EAAKC,iBAAmB,EAAKA,iBAAiBrH,KAAtB,gBACxB,EAAKsH,gBAAkB,EAAKA,gBAAgBtH,KAArB,gBACvB,EAAKuH,YAAc,EAAKA,YAAYvH,KAAjB,gBATL,E,gEAYE,IAAD,OACfwH,iBAAcC,kBAAkB,qBAAoB,SAAAhG,GAAK,OACrD,EAAKzE,MAAMiI,SAASd,OAChB,qBAAER,YAA6B+D,gBAAkBjG,EAAMiG,sB,wCAM/DzH,KAAKC,SAAS,CACVmB,KAAK,Y,kCAKDqC,GACR,IAAMiE,EAAa,CACfhE,YAAY1D,KAAKJ,MAAMuH,eACvB1D,MAAMA,EAAMkE,QAEhBC,QAAQC,IAAIpE,EAAMkE,QAClB3H,KAAKjD,MAAM+K,iBAAiBJ,K,uCAEf7G,GACbb,KAAKC,SAAL,eACKY,EAAIU,OAAOpB,KAAMU,EAAIU,OAAOC,U,+BAgB3B,IAAD,EACyBxB,KAAKJ,MAA5BwB,EADF,EACEA,KAAK+F,EADP,EACOA,eACLY,EAAY/H,KAAKjD,MAAjBgL,SACP,OACI,6BACI,kBAACC,GAAA,EAAD,CACI5G,KAAa,UAAPA,EACNyB,QAASkF,GACL,kBAACE,GAAA,EAAD,CAAa5H,GAAG,qBAAhB,0BAGJ,kBAAC,KAAD,CACImE,MAAM,uBACN0D,SAAUlI,KAAKsH,eAGvB,kBAACU,GAAA,EAAD,CACI5G,KAAa,SAAPA,EACNyB,QAASkF,EACTI,kBAAgB,qBAChB,kBAACF,GAAA,EAAD,CAAa5H,GAAG,qBAAhB,gBACA,kBAAC,iBAAD,CAAe+H,IAAI,OAAOC,SAAUrI,KAAKqH,iBACrC,kBAACiB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,0DAGJ,kBAAC,iBAAD,CACIC,MAAM,eACNhH,MAAO2F,EACPhH,KAAK,iBACLsI,WAAS,EACTrL,OAAO,SACPkF,SAAUtC,KAAKoH,iBACfsB,WAAY,CAAC,WAAY,qBACzBC,cAAe,CAAC,sBAAuB,2BAE3C,kBAACC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQjI,QAASmH,EAAUvK,MAAM,WAAjC,UAIA,kBAACqL,EAAA,EAAD,CAAQC,QAAQ,YAAYtL,MAAM,UAAUuL,KAAK,UAAjD,2B,GA/FChI,aCyCvBiI,G,kDACF,WAAYjM,GAAO,IAAD,8BACd,cAAMA,IACD6C,MAAM,CACPuH,eAAe,GACf8B,mBAAkB,GAGtB,EAAKC,SAAW,EAAKA,SAASnJ,KAAd,gBAChB,EAAKgI,SAAW,EAAKA,SAAShI,KAAd,gBARF,E,6DAWDc,GACfb,KAAKC,SAAL,eACKY,EAAIU,OAAOpB,KAAMU,EAAIU,OAAOC,U,iCAKjCxB,KAAKC,SAAS,CAACgJ,mBAAkB,M,iCAIjCjJ,KAAKC,SAAS,CAACgJ,mBAAkB,M,+BAGzB,IAAD,EAC4CjJ,KAAKjD,MAA/CqE,EADF,EACEA,KAAKd,EADP,EACOA,QAAQ0E,EADf,EACeA,SAAS8C,EADxB,EACwBA,iBACtBmB,EAAqBjJ,KAAKJ,MAA1BqJ,kBAEP,OACF,yBAAKxI,UAAWH,EAAQ+D,MACtB,kBAAC8E,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEjM,SAAS,QACTsD,UAAW4I,IAAW/I,EAAQgJ,OAAT,eAClBhJ,EAAQiJ,YAAcnI,IAEzB5D,MAAM,WAEN,kBAACgM,GAAA,EAAD,CAASC,gBAAiBrI,GACxB,kBAAC8B,EAAA,EAAD,CACE1F,MAAM,UACN4F,aAAW,cACXxC,QAASZ,KAAKjD,MAAM2M,iBACpBjJ,UAAW4I,IAAW/I,EAAQqJ,WAAYvI,GAAQd,EAAQsJ,OAE1D,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAYf,QAAQ,KAAKtL,MAAM,UAAUsM,QAAM,GAA/C,qBAIF,yBAAKrJ,UAAWH,EAAQyJ,YACtB,kBAAClB,EAAA,EAAD,CACEC,QAAQ,YACRtL,MAAM,UACNoD,QAASZ,KAAKkJ,SACdzI,UAAWH,EAAQ0J,QAJrB,QAQA,kBAAC,IAAD,CAAMrJ,GAAG,KACL,kBAACkI,EAAA,EAAD,CAAQC,QAAQ,YAAYtL,MAAM,aAAlC,cAMPyL,GACC,kBAAC,GAAD,CACElB,SAAU/H,KAAK+H,SACf/C,SAAUA,EACV8C,iBAAkBA,S,GAzEE/G,aAkFjBC,gBAvHA,SAAAiJ,GAAK,MAAK,CACrB5F,KAAM,CACFxH,QAAS,QAEbyM,OAAQ,CACJrK,WAAYgL,EAAMC,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQH,EAAMC,YAAYE,OAAOC,MACjCC,SAAUL,EAAMC,YAAYI,SAASC,gBAEvChL,cAAe,MACfF,eAAgB,gBAChBC,WAAY,SACZxC,OAAQ,QAEVyM,YAAa,CACXtM,MAAM,eAAD,OAjBO,IAiBP,OACLyB,WAlBY,IAmBZO,WAAYgL,EAAMC,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQH,EAAMC,YAAYE,OAAOI,QACjCF,SAAUL,EAAMC,YAAYI,SAASG,kBAGzCd,WAAY,CACVjL,WAAY,GACZ2E,YAAa,IAEf0G,WAAY,CACV1G,YAAa,OACb,MAAO,CACLvE,eAAgB,SAGpBkL,OAAQ,CACN5M,OAAQ,eAsFkB,CAAEsN,WAAW,GAAhC1J,CAAwCgI,I,UCjHjD2B,G,kDACF,WAAY5N,GAAO,IAAD,8BACd,cAAMA,IACD6C,MAAM,CACPgL,aAAa,SACbC,aAAa,IAEjB,EAAKC,kBAAoB,EAAKA,kBAAkB/K,KAAvB,gBACzB,EAAKqH,iBAAmB,EAAKA,iBAAiBrH,KAAtB,gBACxB,EAAKgL,kBAAoB,EAAKA,kBAAkBhL,KAAvB,gBARX,E,gEAWE,IAAD,OAEfwH,iBAAcC,kBAAkB,qBAAoB,SAAAhG,GAAK,OACrD,EAAKzE,MAAM8J,QAAQ3C,OACf,qBAAE/D,KAAesH,gBAAkBjG,EAAMiG,oBAIjDF,iBAAcC,kBAAkB,iBAAiB,SAAAhG,GAAK,OAClD,EAAKzE,MAAM8J,QAAQ3C,OAAM,qBAAG1G,QAAsB,EAAKoC,MAAMgL,qB,wCAInDpN,GACdwC,KAAKC,SAAS,CAAC2K,aAAapN,EAAMwN,Q,uCAGrBnK,GACbb,KAAKC,SAAL,eACKY,EAAIU,OAAOpB,KAAMU,EAAIU,OAAOC,U,0CAIjB,IAAD,EACoBxB,KAAKJ,MAClCqL,EAAW,CACb9K,KAHW,EACR0K,aAGHrN,MAJW,EACKoN,cAKpB5K,KAAKjD,MAAMmO,iBAAiBD,GAC5BjL,KAAKC,SAAS,CAAC4K,aAAa,O,+BAGtB,IAAD,EAC2B7K,KAAKjD,MAA9BoO,EADF,EACEA,cAAc7K,EADhB,EACgBA,QADhB,EAE+BN,KAAKJ,MAAlCgL,EAFF,EAEEA,aAAaC,EAFf,EAEeA,aACpB,OACI,6BACA,kBAAC,gBAAD,CACIpK,UAAWH,EAAQ8K,OACnB5N,MAAOoN,EACPS,iBAAkBrL,KAAK8K,oBAC3B,kBAAC,iBAAD,CACI1C,IAAI,OACJC,SAAUrI,KAAK+K,mBAEf,kBAAC,iBAAD,CACEvC,MAAM,oBACNlG,SAAUtC,KAAKoH,iBACf3G,UAAWH,EAAQgL,eACnBxC,QAAQ,SACR1L,OAAO,SACP+C,KAAK,eACLqB,MAAOqJ,EACPnC,WAAY,CAAC,WAAY,oBAAoB,iBAC7CC,cAAe,CACX,qBACA,4BACA,yBAEN,kBAACE,EAAA,EAAD,CACI0C,SAAUJ,EACVpC,KAAK,SACLD,QAAQ,YACRtL,MAAM,UACNiD,UAAWH,EAAQkL,SACnB9K,MAAO,CACL6C,gBAAiB4H,EACjB,OACAnL,KAAKJ,MAAMgL,eAIZO,EAAgB,eAAiB,mB,GArFxBpK,aA+FfC,eAhHA,CACXoK,OAAQ,CACNnO,MAAO,kBACP0B,UAAW,QAEb6M,SAAU,CACRvO,MAAO,QAKTqO,eAAgB,CACdrO,MAAO,OACPH,OAAQ,SAmGCkE,CAAmB2J,IC3C5Bc,G,kDAIF,WAAY1O,GAAO,IAAD,8BACd,cAAMA,IAuCV2M,iBAAmB,WACjB,EAAKzJ,SAAS,CAAEmB,MAAM,KAzCN,EA4ClBsK,kBAAoB,WAClB,EAAKzL,SAAS,CAAEmB,MAAM,KA7CN,EA8ElBuK,UAAY,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACvB,EAAK5L,UAAS,gBAAG4G,EAAH,EAAGA,QAAH,MAAkB,CAC9BA,QAASiF,IAAUjF,EAAS+E,EAAUC,QA9EtC,EAAKjM,MAAQ,CACTwB,MAAM,EAINyF,QAAQ,EAAK9J,MAAMiI,SAAS,GAAGhB,OAE/BmD,eAAe,IAGnB,EAAK+D,iBAAmB,EAAKA,iBAAiBnL,KAAtB,gBAExB,EAAK+H,iBAAmB,EAAKA,iBAAiB/H,KAAtB,gBACxB,EAAKyG,YAAc,EAAKA,YAAYzG,KAAjB,gBACnB,EAAKgM,aAAe,EAAKA,aAAahM,KAAlB,gBACpB,EAAKiM,eAAiB,EAAKA,eAAejM,KAApB,gBAjBR,E,wDAoBNkM,GACVjM,KAAKC,SAAS,CACZ4G,QAAQ7G,KAAKJ,MAAMiH,QAAQZ,QAAO,qBAAE9F,KAAasH,gBAAgBwE,EAAUxE,qB,qCAK7EzH,KAAKC,SAAS,CACZ4G,QAAQ,O,uCAKV,IAAMqF,EAAalM,KAAKjD,MAAMiI,SAASH,KAAI,SAAAsH,GAAC,OAAEA,EAAEnI,UAAQoI,OACpDC,EAAcH,EAAWI,KAAKC,MAAMD,KAAKE,SAASN,EAAWO,SACjEzM,KAAKC,UAAS,SAAAyM,GAAE,MAAG,CACjB7F,QAAQ,GAAD,mBAAK6F,EAAG7F,SAAR,CAAgBwF,U,uCAgBVpB,GAAU,IAChBpE,EAAS7G,KAAKJ,MAAdiH,QAMP7G,KAAKC,SAAS,CACV4G,QAAQ,GAAD,mBAAKA,GAAL,CAAaoE,IACpBJ,aAAa,O,uCAUJnD,GACbA,EAAWrH,GAAGqH,EAAWhE,YAAY+D,cAAckF,QAAQ,KAAK,KAChEjF,EAAW1D,OAAX,YAAsBhE,KAAKJ,MAAMiH,SACjC7G,KAAKjD,MAAM6P,WAAWlF,GACtB1H,KAAKjD,MAAMgI,QAAQX,KAAK,O,+BASlB,IAAD,EACgCpE,KAAKjD,MAApCuD,EADD,EACCA,QAAQuM,EADT,EACSA,WAAW7H,EADpB,EACoBA,SADpB,EAEkBhF,KAAKJ,MAAtBwB,EAFD,EAECA,KAAMyF,EAFP,EAEOA,QACRsE,EAAgBtE,EAAQ4F,QAAQI,EAEtC,OACE,yBAAKpM,UAAWH,EAAQ+D,MACtB,kBAAC,GAAD,CACEjD,KAAMA,EAEN4D,SAAUA,EACV8C,iBAAkB9H,KAAK8H,iBACvB4B,iBAAkB1J,KAAK0J,mBAC3B,kBAACoD,EAAA,EAAD,CACErM,UAAWH,EAAQyM,OACnBjE,QAAQ,aACRkE,OAAO,OACP5L,KAAMA,EACNd,QAAS,CACP2M,MAAO3M,EAAQ4M,cAGjB,yBAAKzM,UAAWH,EAAQ6M,cACtB,kBAACjK,EAAA,EAAD,CAAYtC,QAASZ,KAAK0L,mBACxB,kBAAC,IAAD,QAGJ,kBAAC0B,EAAA,EAAD,MACA,yBAAK3M,UAAWH,EAAQ2E,WACtB,kBAAC4E,EAAA,EAAD,CAAYf,QAAQ,KAAKuE,cAAY,GAArC,yBACA,yBAAK5M,UAAWH,EAAQgN,SACtB,kBAACzE,EAAA,EAAD,CACEC,QAAQ,YACRtL,MAAM,YACNoD,QAASZ,KAAK+L,aACdtL,UAAWH,EAAQ0J,QAJrB,iBAQA,kBAACnB,EAAA,EAAD,CACEC,QAAQ,YACRtL,MAAM,UACNoD,QAASZ,KAAKgM,eACdT,SAAUJ,EACV1K,UAAWH,EAAQ0J,QALrB,iBASA,kBAAC,GAAD,CACEmB,cAAeA,EACfD,iBAAkBlL,KAAKkL,iBACvBrE,QAASA,OAIjB,0BACIpG,UAAW4I,IAAW/I,EAAQiN,QAAT,eAChBjN,EAAQkN,aAAepM,KAGhC,yBAAKX,UAAWH,EAAQ6M,eACpB,kBAAC,GAAD,CACEM,KAAK,KACL9B,UAAW3L,KAAK2L,UAChB9E,QAASA,EACTL,YAAaxG,KAAKwG,oB,GAzJHzF,aAAvB0K,GACGiC,aAAa,CAClBb,WAAW,IA+JA7L,oBAzNA,SAAAiJ,GAAK,MAAK,CACvB5F,KAAM,CACJxH,QAAS,QAEX+M,KAAM,CACJ/M,QAAS,QAEXkQ,OAAQ,CACN9P,MAVgB,IAWhB0Q,WAAY,GAEdT,YAAa,CACXjQ,MAdgB,IAehBJ,QAAS,OACTyC,WAAY,UAEd6N,aAAa,aACXtQ,QAAS,OACTyC,WAAY,SACZtB,QAAS,SACNiM,EAAM2D,OAAOC,QAJN,CAKVxO,eAAgB,aAElBkO,QAAS,CACPzQ,OAAO,qBACPgR,SAAU,EACV9P,QAASiM,EAAM8D,QAAQ,GACvB9O,WAAYgL,EAAMC,YAAYC,OAAO,SAAU,CAC7CC,OAAQH,EAAMC,YAAYE,OAAOC,MACjCC,SAAUL,EAAMC,YAAYI,SAASC,gBAEvC7L,YAjCgB,KAmClB8O,aAAc,CACZvO,WAAYgL,EAAMC,YAAYC,OAAO,SAAU,CAC7CC,OAAQH,EAAMC,YAAYE,OAAOI,QACjCF,SAAUL,EAAMC,YAAYI,SAASG,iBAEvC/L,WAAY,GAEduG,UAAU,CACRhI,MAAO,MACPH,OAAQ,OACRD,QAAS,OACT0C,cAAe,SACfF,eAAgB,SAChBC,WAAY,UAEdgO,QAAS,CACPrQ,MAAO,QAET+M,OAAQ,CACN/M,MAAO,UAqKuB,CAAEyN,WAAW,GAAhC1J,CAAwCyK,IC9OxC,IACb,CACE/H,YAAa,qBACbrD,GAAI,qBACJoD,MAAO,eACPO,OAAQ,CACN,CAAE7D,KAAM,MAAO3C,MAAO,WACtB,CAAE2C,KAAM,OAAQ3C,MAAO,WACvB,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,OAAQ3C,MAAO,WACvB,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,OAAQ3C,MAAO,WACvB,CAAE2C,KAAM,OAAQ3C,MAAO,WACvB,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,OAAQ3C,MAAO,WACvB,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,OAAQ3C,MAAO,WACvB,CAAE2C,KAAM,WAAY3C,MAAO,aAG/B,CACEkG,YAAa,oBACbrD,GAAI,oBACJoD,MAAO,eACPO,OAAQ,CACN,CAAE7D,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,UAAW3C,MAAO,WAC1B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,UAAW3C,MAAO,WAC1B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,WAAY3C,MAAO,aAG/B,CACEkG,YAAa,uBACbrD,GAAI,uBACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,UAAW3C,MAAO,WAC1B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,mBAAoB3C,MAAO,WACnC,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,qBAAsB3C,MAAO,WACrC,CAAE2C,KAAM,kBAAmB3C,MAAO,WAClC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,0BAA2B3C,MAAO,WAC1C,CAAE2C,KAAM,oBAAqB3C,MAAO,WACpC,CAAE2C,KAAM,gBAAiB3C,MAAO,aAGpC,CACEkG,YAAa,0BACbrD,GAAI,0BACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,oBAAqB3C,MAAO,WACpC,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,kBAAmB3C,MAAO,WAClC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,gBAAiB3C,MAAO,aAGpC,CACEkG,YAAa,wBACbrD,GAAI,wBACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,kBAAmB3C,MAAO,WAClC,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,UAAW3C,MAAO,WAC1B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,UAAW3C,MAAO,WAC1B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,aAAc3C,MAAO,aAGjC,CACEkG,YAAa,yBACbrD,GAAI,yBACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,mBAAoB3C,MAAO,WACnC,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,kBAAmB3C,MAAO,WAClC,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,mBAAoB3C,MAAO,WACnC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,kBAAmB3C,MAAO,aAGtC,CACEkG,YAAa,yBACbrD,GAAI,yBACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,UAAW3C,MAAO,WAC1B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,oBAAqB3C,MAAO,WACpC,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,mBAAoB3C,MAAO,WACnC,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,kBAAmB3C,MAAO,WAClC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,SAAU3C,MAAO,aAG7B,CACEkG,YAAa,wBACbrD,GAAI,wBACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,aAAc3C,MAAO,WAC7B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,iBAAkB3C,MAAO,WACjC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,sBAAuB3C,MAAO,aAG1C,CACEkG,YAAa,wBACbrD,GAAI,wBACJoD,MAAO,2BACPO,OAAQ,CACN,CAAE7D,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,QAAS3C,MAAO,WACxB,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,SAAU3C,MAAO,WACzB,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,gBAAiB3C,MAAO,WAChC,CAAE2C,KAAM,YAAa3C,MAAO,WAC5B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,eAAgB3C,MAAO,WAC/B,CAAE2C,KAAM,cAAe3C,MAAO,WAC9B,CAAE2C,KAAM,gBAAiB3C,MAAO,c,UC/OhCwQ,GAAS,CAAE,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE7D,SAASC,GAAgBC,GAAiB,IAAD,EAC9BxK,EAA+BwK,EAA/BxK,YAAYrD,EAAmB6N,EAAnB7N,GAAGoD,EAAgByK,EAAhBzK,MAAMO,EAAUkK,EAAVlK,OACxB0D,EAAa,CACfhE,YAAaA,EACbrD,GAAIA,EACJoD,MAAOA,EACPO,OAAQ,IAN2B,eAQnBgK,IARmB,IAQrC,2BAA0B,CAAC,IAAlBtM,EAAiB,QACxBgG,EAAW1D,OAAOtC,GAAS,IATQ,oCAwCrByM,EAAUC,EAxCW,eAWnBpK,GAXmB,IAWrC,2BAA0B,CAAC,IAAlBxG,EAAiB,QACpB6Q,GA4BUF,EA5BO3Q,EAAMA,MA4BH4Q,EA5BU,GA6B7B3Q,IACJ4Q,MAbL,SAAkBF,GAEhB,MAAO,CACL1Q,IAAO0Q,GACJG,OAAO,KACPtD,MACHmD,EALU,QAYHI,CAASJ,IACfK,KAAK,OACLxK,OAAOoK,IAhC8BK,UACtC,IAAK,IAAI3H,KAAKuH,EACZ3G,EAAW1D,OAAOgK,GAAOlH,IAAI1C,KAAK,CAChCjE,KAAK,GAAD,OAAK3C,EAAM2C,KAAX,YAAmB6N,GAAOlH,IAC9BzG,GAAI7C,EAAM2C,KAAKsH,cAAckF,QAAQ,KAAM,KAC3C3B,IAAKqD,EAAMvH,GACX4H,IAAKjR,IAAO4Q,EAAMvH,IAAI6H,MACtBC,KAAMnR,IAAO4Q,EAAMvH,IAChB6H,MACAhC,QAAQ,MAAO,QACfA,QAAQ,IAAK,YAtBe,8BA0BrC,OAAOjF,E,ICsEImH,G,kDApFb,WAAY9R,GAAO,IAAD,8BAChB,cAAMA,IACD6C,MAAQ,CACXoF,SAAS6B,IAEX,EAAKS,YAAa,EAAKA,YAAYvH,KAAjB,gBAClB,EAAK+O,gBAAkB,EAAKA,gBAAgB/O,KAArB,gBANP,E,wDASN2H,GACV1H,KAAKC,SAAS,CACZ+E,SAAS,GAAD,mBAAKhF,KAAKJ,MAAMoF,UAAhB,CAAyB0C,Q,sCAIrBrH,GACd,OAAOL,KAAKJ,MAAMoF,SAAS+J,MAAK,SAAChL,GAC/B,OAAOA,EAAQ1D,KAAOA,O,+BAGf,IAAD,OACR,OACE,kBAAC,IAAD,CAAY2O,SAAS,KACrB,yBAAKvO,UAAU,OACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACEwO,OAAK,EACLC,KAAK,eACLC,OACE,SAACC,GAAD,OACE,kBAAC,GAAD,iBACIA,EADJ,CAEAxC,WAAY,EAAKtF,YACjBtC,SAAU,EAAKpF,MAAMoF,eAK3B,kBAAC,IAAD,CACEiK,OAAK,EACLC,KAAK,+BACLC,OACE,SAACC,GAAD,OACA,kBAAC,EAAD,iBACMA,EADN,CAEErL,QACEkK,GACE,EAAKa,gBAAgBM,EAAWpJ,MAAMqJ,OAAOjP,YAGjDuF,QAASyJ,EAAWpJ,MAAMqJ,OAAOC,cAKvC,kBAAC,IAAD,CACEL,OAAK,EACLC,KAAK,eACLC,OACE,SAACC,GAAD,OAAe,kBAAC,EAAD,CAASrL,QACtBkK,GACE,EAAKa,gBAAgBM,EAAWpJ,MAAMqJ,OAAOhP,UAMrD,kBAAC,IAAD,CACE4O,OAAK,EACLC,KAAK,IACLC,OACE,SAACC,GAAD,OAAc,kBAAC,EAAD,eAAapK,SAAU,EAAKpF,MAAMoF,UAAcoK,c,GAzE1DrO,aCFEwO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1J,MACvB,2DCXN2J,IAASR,OACP,kBAAC,IAAMS,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,GAAD,QAGFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1I,QAAQ0I,MAAMA,EAAMxN,c","file":"static/js/main.b559ee6a.chunk.js","sourcesContent":["import chroma from 'chroma-js'\r\nexport default {\r\n    ColorBox:{\r\n        display: \"inline-block\",\r\n        // height: \"25%\",\r\n        height: props=> props.showingFullPalette?\"25%\":\"50%\",\r\n        width: \"20%\",\r\n        cursor: \"pointer\",\r\n        position: \"relative\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"-3.5px\",\r\n        \"&:hover button\":{\r\n            opacity:1\r\n        }\r\n    },\r\n    copyText:{\r\n        color:props=>\r\n            chroma(props.background).luminance()>0.6?\"black\":\"white\"\r\n    },\r\n    colourName:{\r\n        color: props=> chroma(props.background).luminance()<0.5&&\"white\"\r\n    },\r\n    boxConatiner:{\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        left: \"0px\",\r\n        bottom: \"0px\",\r\n        padding: \"10px\",\r\n        color: \"black\",\r\n        letterSpacing: \"1px\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"12px\",\r\n    },\r\n    seeMore:{\r\n        color:props=> chroma(props.background).luminance()>0.6?\"black\":\"white\",\r\n        background: \"rgba(255, 255, 255, 0.3)\",\r\n        position: \"absolute\",\r\n        border: \"none\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        width: \"60px\",\r\n        height: \"30px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"30px\",\r\n        textTransform: \"uppercase\",\r\n    },\r\n    copyButton:{\r\n        color:props=> chroma(props.background).luminance()>0.6?\"black\":\"white\",\r\n        background: \"rgba(255,255,255,0.25)\",\r\n        textTransform:\"uppercase\",\r\n        display: \"inline-block\",\r\n        width:\"100px\",\r\n        height: \"30px\",\r\n        position: \"absolute\",\r\n        marginLeft:\"-50px\",\r\n        marginTop: \"-15px\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        fontSize: \"1rem\",\r\n        lineHeight: \"30px\",\r\n        outline: \"none\",\r\n        border: \"none\",\r\n        textAlign: \"center\",\r\n        textDecoration: \"none\",\r\n        opacity:0\r\n    },\r\n    copyOverlay:{\r\n    opacity: \"0\",\r\n    zIndex: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    transition: \"transform 0.6s ease-in-out\",\r\n    transform: \"scale(0.1)\"\r\n    },\r\n    show:{\r\n        transform: \"scale(50)\",\r\n        opacity: \"1\",\r\n        zIndex: \"10\",\r\n        position: \"absolute\",\r\n    },\r\n    copyMessage:{\r\n        transform: \"scale(0.1)\",\r\n        justifyContent: \"center\",\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        fontSize: \"4rem\",\r\n        opacity: \"0\",\r\n        color: \"white\",\r\n        \"& h1\":{\r\n            textShadow: \"1px 2px black\",\r\n            background: \"rgba(255, 255, 255, 0.2)\",\r\n            width: \"100%\",\r\n            fontWeight: \"400\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"0\",\r\n            padding: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n        },\r\n        \"& p\":{\r\n            fontSize: \"2rem\",\r\n            fontWeight:\"100\",\r\n        }\r\n    },\r\n    showMessage:{\r\n        opacity: \"1\",\r\n        transform: \"scale(1)\",\r\n        zIndex: \"25\",\r\n        transition: \"all 0.4s ease-in-out\",\r\n        transitionDelay: \"0.3s\",\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {Link} from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './Styles/ColorBoxStyles'\r\n\r\n// import './ColorBox.css'\r\n\r\nclass ColorBox extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            copied:false\r\n        }\r\n        this.handleCopyState = this.handleCopyState.bind(this)\r\n    }\r\n    handleCopyState(){\r\n        this.setState({copied:true},()=>{\r\n            setTimeout(()=>this.setState({copied:false}),1000)\r\n        })\r\n    }\r\n    render() {\r\n        const {background,name,paletteId,id,showingFullPalette,classes}= this.props;\r\n        const {copied} = this.state;\r\n        // const isDarker = chroma(background).luminance()<0.5;\r\n        // const isLight = chroma(background).luminance()>0.6;\r\n        return (\r\n            <CopyToClipboard text={background} onCopy={this.handleCopyState}> \r\n            <div className={classes.ColorBox} style={{background}}>\r\n                <div className={`${classes.copyOverlay} ${copied && classes.show}`} style={{background}}/>\r\n                    {/* <div className={`copy-msg ${copied && \"show\"}`}> */}\r\n                    <div className={`${classes.copyMessage} ${copied && classes.showMessage}`}>\r\n                        <h1>copied!</h1>\r\n                        <p className={classes.copyText}>{background}</p>\r\n                    </div>\r\n                    {/* <div className=\"copy-container\"> */}\r\n                    <div>\r\n                        <div className={classes.boxConatiner}>\r\n                            <span className={classes.colourName}>{name}</span>\r\n                            {/* <span className={isDarker && 'light-text'}>{name}</span> */}\r\n                        </div>\r\n                        <button className={classes.copyButton}>Copy</button>\r\n                        {/* <button className={`copy-button ${isLight && \"dark-text\"}`}>Copy</button> */}\r\n                    </div>\r\n                    {showingFullPalette && \r\n                        <Link to={`/palette/${paletteId}/${id}`} onClick={evt=>evt.stopPropagation()}>\r\n                            <span className={classes.seeMore}>More</span>\r\n                            {/* <span className={`see-more ${isLight && \"dark-text\"}`}>More</span> */}\r\n                        </Link>\r\n                    }\r\n            </div>\r\n            </CopyToClipboard>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorBox);\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Slider from 'rc-slider';\r\n\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\n\r\n// import './NavBar.css'\r\nimport styles from './Styles/NavBarStyles'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nclass NavBar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            format:\"hex\",\r\n            open:false\r\n        }\r\n        this.handleSelectChange = this.handleSelectChange.bind(this)\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this)\r\n    }\r\n    handleSelectChange(evt){\r\n        this.setState({format:evt.target.value,open:true})\r\n        this.props.handleFormatChange(evt.target.value)\r\n    }\r\n\r\n    handleSnackbarClose(){\r\n        this.setState({open:false})\r\n    }\r\n\r\n    render() {\r\n        const {level, handleLevelChange, showSlider,classes} = this.props\r\n        const {open,format} = this.state;\r\n        return (\r\n            <header className={classes.NavBar}>\r\n                <div className={classes.logo}>\r\n                    <Link to=\"/\">colour-clone</Link>\r\n                </div>\r\n                {showSlider &&\r\n                    <div className=\"slider-container\">\r\n                        <span>\r\n                            Level:{level}\r\n                        </span>\r\n                        <div className={classes.slider}>\r\n                            <Slider \r\n                                step={100} \r\n                                min={100} \r\n                                max={900} \r\n                                defaultValue={level}\r\n                                onAfterChange={handleLevelChange}/>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className={classes.selectContainer}>\r\n                    <Select value={format} onChange={this.handleSelectChange}>\r\n                        <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n                        <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n                        <MenuItem value=\"rgba\">RGBA - rgba(255,255,255,1.0)</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical:\"bottom\", horizontal:\"left\" }}\r\n                    open={open}\r\n                    autoHideDuration={2780}\r\n                    onClose={this.handleSnackbarClose}\r\n                    message={<span id=\"message-id\">Format Changed to {format.toUpperCase()}</span>}\r\n                    ContentProps={{\r\n                        \"aria-describedly\":\"message-id\"\r\n                    }}\r\n                    action={\r\n                        <IconButton \r\n                            onClick={this.handleSnackbarClose}\r\n                            color='inherit'\r\n                            key='close'\r\n                            aria-label='close'>\r\n                            <Close/>\r\n                        </IconButton>\r\n                    }\r\n\r\n                />\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","export default{\r\n    \"NavBar\":{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        height: '6vh',\r\n    },\r\n    \r\n    \r\n    logo:{\r\n        marginRight: 15,\r\n        padding: '0 15px',\r\n        // padding: '0 13px',\r\n        fontSize: 22,\r\n        fontFamily: 'cursive',\r\n        /* background-color: antiquewhite; */\r\n        backgroundColor: '#E8E8E8',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        \"& a\":{\r\n            textDecoration: 'none',\r\n            color: 'black',\r\n        }\r\n    },\r\n\r\n    slider:{\r\n        width: 250,\r\n        margin: '0,10px',\r\n        display: 'inline-block',\r\n        \"& .rc-slider-track\":{\r\n            backgroundColor: 'transparent',\r\n        },\r\n        \"& .rc-slider-handle .rc-slider-handle:hover .rc-slider-handle:focus\":{\r\n            outline: 'none',\r\n            border: 'none',\r\n        }\r\n    },\r\n    selectContainer:{\r\n        marginLeft: 'auto',\r\n        marginRight: '2rem',\r\n    }\r\n}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './Styles/PaletteFooter'\r\n\r\nfunction PaletteFotter(props){\r\n    const {paletteName,emoji,classes} = props\r\n    return(\r\n        <footer className={classes.PaletteFooter}>\r\n            {paletteName}\r\n            <span className={classes.emoji}>{emoji}</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PaletteFotter);","export default {\r\n    PaletteFooter:{\r\n        justifyContent: \"flex-end\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        height: \"5vh\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: \"white\"\r\n    },\r\n    emoji:{\r\n        fontSize: \"2rem\",\r\n        margin: \"auto 1rem\",\r\n    }\r\n}","export default{\r\n    Palette:{\r\n        height: \"95vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    PaletteColors:{\r\n        height: \"90%\",\r\n    },\r\n    goBack:{\r\n        display: \"inline-block\",\r\n        // height: \"25%\",\r\n        height:\"50%\",\r\n        width: \"20%\",\r\n        cursor: \"pointer\",\r\n        position: \"relative\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"-3.5px\",\r\n        opacity:1,\r\n        backgroundColor: \"black\",\r\n        // position: \"relative\",\r\n        \"& a\":{\r\n            color:\"white\",\r\n            background: \"rgba(255,255,255,0.25)\",\r\n            textTransform:\"uppercase\",\r\n            display: \"inline-block\",\r\n            width:\"100px\",\r\n            height: \"30px\",\r\n            position: \"absolute\",\r\n            marginLeft:\"-50px\",\r\n            marginTop: \"-15px\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            fontSize: \"1rem\",\r\n            lineHeight: \"30px\",\r\n            outline: \"none\",\r\n            border: \"none\",\r\n            textAlign: \"center\",\r\n            textDecoration: \"none\",\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport ColorBox from './ColorBox'\r\nimport NavBar from './NavBar'\r\nimport PalatteFooter from './PaletteFooter'\r\n\r\n// import './Palette.css'\r\nimport styles from './Styles/PaletteStyles'\r\n\r\nclass Palette extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            level:300,\r\n            format:\"hex\"\r\n        }\r\n        this.handleLevelChange = this.handleLevelChange.bind(this)\r\n        this.handleFormatChange = this.handleFormatChange.bind(this)\r\n    }\r\n    handleLevelChange(level){\r\n        this.setState({level})\r\n    }\r\n\r\n    handleFormatChange(val){\r\n        this.setState({format:val})\r\n    }\r\n\r\n    render() {\r\n        const {colors,paletteName,emoji,id} = this.props.palette\r\n        const {classes} = this.props\r\n        const {level,format} = this.state\r\n        let colourBoxes = []\r\n        colors[level].every(colour=>(\r\n            colourBoxes.push(\r\n                <ColorBox \r\n                    background={colour[format]} \r\n                    name={colour.name} \r\n                    key={colour.id}\r\n                    id={colour.id}\r\n                    paletteId={id}\r\n                    showingFullPalette\r\n                    />)\r\n        ))\r\n\r\n        return (\r\n            <div className={classes.Palette}>\r\n                <NavBar \r\n                    level={level} \r\n                    handleLevelChange={this.handleLevelChange} \r\n                    format={format} \r\n                    handleFormatChange={this.handleFormatChange}\r\n                    showSlider/>\r\n                <div className={classes.PaletteColors}> \r\n                    {colourBoxes}\r\n                </div>\r\n                <PalatteFooter\r\n                    paletteName={paletteName}\r\n                    emoji={emoji}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Palette);","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './Styles/MiniPaletteStyles'\r\n\r\nfunction MiniPalette(props){\r\n    const {classes,paletteName,colors,emoji,handleClick} = props\r\n    let miniColors = colors.map(colour=>(\r\n        <div className={classes.miniColor} style={{backgroundColor:colour.color}} key={colour.name}>\r\n\r\n        </div>\r\n    ))\r\n    return (\r\n        <div className={classes.root} onClick={handleClick}>\r\n            <div className={classes.colors}>\r\n                {miniColors}\r\n            </div>\r\n            <div className={classes.title}>{paletteName}\r\n                <span className={classes.emoji}>\r\n                    {emoji}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default withStyles(styles)(MiniPalette);","export default {\r\n    root: {\r\n    //   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      background: 'white',\r\n      border:'1px solid black',\r\n      borderRadius:'5px',\r\n      padding:'0.5rem',\r\n      position:\"realtive\",\r\n      overflow:\"hidden\",\r\n      \"&:hover\":{\r\n          cursor:\"pointer\"\r\n      }\r\n\r\n    },\r\n    colors:{\r\n        // background:\"gray\",\r\n        backgroundColor: \"#dae1e4\",\r\n        height: \"150px\",\r\n        width: \"100%\",\r\n        borderRadius: \"5px\",\r\n        overflow: \"hidden\"\r\n\r\n    },\r\n    title:{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\",\r\n        alignItems:\"center\",\r\n        margin:\"0\",\r\n        \"color\":\"black\",\r\n        paddingTop:\"0.5rem\",\r\n        fontSize: \"1rem\",\r\n        position: \"relative\"\r\n    },\r\n    emoji:{\r\n        marginLeft: \"0.5rem\",\r\n        fontSize: \"1.5rem\"\r\n    },\r\n    miniColor: {\r\n        height: \"25%\",\r\n        width: \"20%\",\r\n        display: \"inline-block\",\r\n        margin: \"0 auto\",\r\n        position: \"relative\",\r\n        marginBottom: \"-3.5px\"\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {Link} from 'react-router-dom'\r\nimport styles from './Styles/PaletteListStyles'\r\nimport MiniPalette from './MiniPalette'\r\n\r\n\r\nclass PaletteList extends Component {\r\n    redirectToPallete(id){\r\n        this.props.history.push(`/palette/${id}`)\r\n    }\r\n    render() {\r\n        const {palettes,classes} = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.container}>\r\n                    <nav className={classes.nav}>\r\n                        <h1>Palettes List</h1>\r\n                        <Link to='/palette/new'>Create a New Palette</Link>\r\n                    </nav>\r\n                    <div className={classes.palettes}>\r\n                        {\r\n                        palettes.map(\r\n                            palette=>(\r\n                                <MiniPalette {...palette} handleClick={()=>this.redirectToPallete(palette.id)} key={palette.id}/>\r\n                            // <Link to={`/palette/${palette.id}`}><MiniPalette {...palette}/></Link>\r\n                            // <Link to={`/palette/${palette.id}`}>{palette.paletteName}</Link> \r\n                            )\r\n                        )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PaletteList);","export default{\r\n    root: {\r\n        backgroundColor: \"blue\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\"\r\n    },\r\n    container: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    nav: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n        color: \"white\",\r\n        alignItems:\"center\",\r\n        \"& a\":{\r\n            textDecoration:\"none\",\r\n            color: \"white\"\r\n        }\r\n    },\r\n    palettes: {\r\n        boxSizing: \"border-box\",\r\n        width: \"100%\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(3, 30%)\",\r\n        gridGap: \"5%\"\r\n    }\r\n};\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport ColorBox from './ColorBox'\r\nimport NavBar from './NavBar'\r\nimport PalatteFooter from './PaletteFooter'\r\n\r\nimport styles from './Styles/PaletteStyles'\r\n\r\nclass SingleColourPalette extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            format:\"hex\"\r\n        }\r\n\r\n        this._shades= this.extarctColours(this.props.palette,this.props.colorId)\r\n        this.handleFormatChange = this.handleFormatChange.bind(this)\r\n    }\r\n\r\n    extarctColours(palette,colourID){\r\n        let colourData = []\r\n        let allColurs = palette.colors\r\n\r\n        for (let levelKey in allColurs){\r\n            let match = allColurs[levelKey].filter(\r\n                eachColour=>eachColour.id===colourID\r\n            )\r\n            colourData.push(match[0])\r\n        }\r\n\r\n        return colourData.splice(1)\r\n    }\r\n\r\n    handleFormatChange(val){\r\n        this.setState({format:val})\r\n    }\r\n\r\n    render() {\r\n        const {paletteName,emoji,id}=this.props.palette\r\n        const {format} = this.state\r\n        const {classes} = this.props\r\n        let colorBoxes = this._shades.map(colourShade=>\r\n                <ColorBox \r\n                    background={colourShade[format]} \r\n                    name={colourShade.name} \r\n                    showingFullPalette={false}\r\n                    key={colourShade.name}\r\n                    />\r\n            )\r\n        return (\r\n            <div className={classes.Palette}>\r\n                <NavBar\r\n                    handleFormatChange={this.handleFormatChange}\r\n                    showSlider={false}\r\n                />\r\n                <div className={classes.PaletteColors}>\r\n                    {colorBoxes}\r\n                    <div className={classes.goBack}>\r\n                        <Link to={`/palette/${id}`} className=\"back-button\">Go Back</Link>\r\n                    </div>\r\n                </div>\r\n                <PalatteFooter\r\n                    paletteName={paletteName}\r\n                    emoji={emoji}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(SingleColourPalette);","import React from 'react'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport { SortableElement } from \"react-sortable-hoc\";\r\n\r\nconst styles={\r\n    DragableColorBox:{\r\n        display: \"inline-block\",\r\n        height: \"25%\",\r\n        width: \"20%\",\r\n        cursor: \"pointer\",\r\n        position: \"relative\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"-3.5px\",\r\n        \"&:hover svg\": {\r\n            color: \"white\",\r\n            transform: \"scale(1.5)\"\r\n        }\r\n    },\r\n    boxContent:{\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        left: \"0px\",\r\n        bottom: \"0px\",\r\n        padding: \"10px\",\r\n        color: \"black\",\r\n        letterSpacing: \"1px\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"12px\",\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\"\r\n    },\r\n    deleteIcon: {\r\n        transition: \"all 0.3s ease-in-out\"\r\n    }\r\n}\r\nconst DragableColorBox= SortableElement((props)=> {\r\n    const {classes,color,name,deleteColor} = props\r\n    return (\r\n        <div className={classes.DragableColorBox} style={{backgroundColor:color}}>\r\n            <div className={classes.boxContent}>\r\n                <span>{name}</span>\r\n                <DeleteRoundedIcon className={classes.deleteIcon} onClick={deleteColor} />\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default  withStyles(styles)(DragableColorBox);\r\n","import React from 'react'\r\nimport DragableColorBox from './DragableColorBox'\r\nimport {SortableContainer} from 'react-sortable-hoc';\r\n\r\nconst DragableColorBoxList = SortableContainer(({colours,deleteColor})=> {\r\n    return (\r\n        <div style={{height:\"100%\"}}>\r\n            {colours.map((colour,i)=>(\r\n                <DragableColorBox \r\n                    index={i}\r\n                    color={colour.color} \r\n                    name={colour.name} \r\n                    key={colour.name} \r\n                    deleteColor={()=>deleteColor(colour.name)}\r\n                    />\r\n              //   <li style={{backgroundColor:colour}}>{colour}</li>\r\n            ))}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default DragableColorBoxList\r\n","import React, { Component } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nclass PaleteMetaForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            open:\"form\",\r\n            // open:true,\r\n            newPaletteName:\"\"\r\n        }\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.showEmojiPicker = this.showEmojiPicker.bind(this);\r\n        this.savePalette = this.savePalette.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        ValidatorForm.addValidationRule(\"PaletteNameUnique\",value=>(\r\n            this.props.palettes.every(\r\n                ({paletteName}) => paletteName.toLowerCase() !== value.toLowerCase()\r\n            )\r\n        ));\r\n    }\r\n\r\n    showEmojiPicker(){\r\n        this.setState({\r\n            open:\"emoji\"\r\n        })\r\n        // this.props.handleSavePalete(this.state.newPaletteName)\r\n    }\r\n\r\n    savePalette(emoji){\r\n        const newPalette = {\r\n            paletteName:this.state.newPaletteName,\r\n            emoji:emoji.native\r\n        }\r\n        console.log(emoji.native)\r\n        this.props.handleSavePalete(newPalette)\r\n    }\r\n    handleNameChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value}\r\n        )\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open:true\r\n        })\r\n    };\r\n    \r\n    handleClose = () => {\r\n        this.setState({\r\n            open:\"form\"\r\n        })\r\n    };\r\n\r\n    \r\n    render() {\r\n        const {open,newPaletteName} = this.state\r\n        const {hideForm} = this.props\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    open={open===\"emoji\"}\r\n                    onClose={hideForm} >\r\n                        <DialogTitle id='form-dialog-title'>\r\n                            Choose a Palette Emoji\r\n                        </DialogTitle>\r\n                    <Picker\r\n                        title='Pick a Palette Emoji'\r\n                        onSelect={this.savePalette}\r\n                    />\r\n                </Dialog>\r\n                <Dialog \r\n                    open={open===\"form\"} \r\n                    onClose={hideForm} \r\n                    aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Save Palette</DialogTitle>\r\n                    <ValidatorForm ref=\"form\" onSubmit={this.showEmojiPicker}>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                            Add name to your Palette. Make sure it is Unique. \r\n                            </DialogContentText>\r\n                        <TextValidator\r\n                            label=\"Palette Name\"\r\n                            value={newPaletteName}\r\n                            name=\"newPaletteName\"\r\n                            fullWidth\r\n                            margin='normal'\r\n                            onChange={this.handleNameChange}\r\n                            validators={[\"required\", \"PaletteNameUnique\"]}\r\n                            errorMessages={[\"Give Palette A Name\", \"Palette Name is Used\"]}/>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={hideForm} color=\"primary\">\r\n                            {/* <Button onClick={this.handleClose} color=\"primary\"> */}\r\n                              Cancel\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                              Save New Palete\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </ValidatorForm>\r\n              </Dialog>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n\r\nexport default PaleteMetaForm","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport classNames from \"classnames\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport PaleteMetaForm from './PaleteMetaForm'\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n      },\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: \"64px\"\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen\r\n        })\r\n      },\r\n      menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 20\r\n      },\r\n      navButtons: {\r\n        marginRight: \"1rem\",\r\n        \"& a\": {\r\n          textDecoration: \"none\"\r\n        }\r\n      },\r\n      button: {\r\n        margin: \"0 0.5rem\"\r\n      }\r\n});\r\n\r\nclass PaletteFormNavbar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            newPaletteName:\"\",\r\n            showingDialogForm:false,\r\n        }\r\n        // this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.showForm = this.showForm.bind(this);\r\n        this.hideForm = this.hideForm.bind(this);\r\n    }\r\n    \r\n    handleNameChange(evt){\r\n      this.setState({\r\n          [evt.target.name]:evt.target.value}\r\n      )\r\n    }\r\n\r\n    showForm(){\r\n      this.setState({showingDialogForm:true})\r\n    }\r\n\r\n    hideForm(){\r\n      this.setState({showingDialogForm:false})\r\n    }\r\n\r\n    render() {\r\n        const {open,classes,palettes,handleSavePalete} = this.props\r\n        const {showingDialogForm} = this.state\r\n        // const {newPaletteName} = this.state\r\n        return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n          color=\"default\"\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.props.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Create a Palette\r\n            </Typography>\r\n          </Toolbar>\r\n          <div className={classes.navButtons}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.showForm}\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Link to=\"/\">\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  Go Back\r\n                </Button>\r\n            </Link>\r\n          </div>\r\n        </AppBar>\r\n        {showingDialogForm &&\r\n          <PaleteMetaForm\r\n            hideForm={this.hideForm}\r\n            palettes={palettes}\r\n            handleSavePalete={handleSavePalete}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default PaletteFormNavbar;\r\nexport default withStyles(styles, { withTheme: true })(PaletteFormNavbar);\r\n","import React, { Component } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {ChromePicker} from 'react-color'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nconst styles = {\r\n    picker: {\r\n      width: \"100% !important\",\r\n      marginTop: \"2rem\"\r\n    },\r\n    addColor: {\r\n      width: \"100%\",\r\n    //   padding: \"1rem\",\r\n    //   marginTop: \"1rem\",\r\n    //   fontSize: \"2rem\"\r\n    },\r\n    colorNameInput: {\r\n      width: \"100%\",\r\n      height: \"70px\"\r\n    }\r\n  };\r\n\r\nclass ColorPickerForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            currentColor:'orange',\r\n            newColorName:\"\"\r\n        }\r\n        this.handleUpadteColor = this.handleUpadteColor.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmitColor = this.handleSubmitColor.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const {colours} = this.state;\r\n        ValidatorForm.addValidationRule(\"isColorNameUnique\",value=>(\r\n            this.props.colours.every(\r\n                ({name}) => name.toLowerCase() !== value.toLowerCase()\r\n            )\r\n        ));        \r\n\r\n        ValidatorForm.addValidationRule(\"isColorUnique\", value =>\r\n            this.props.colours.every(({ color }) => color !== this.state.currentColor)\r\n        );\r\n    }\r\n\r\n    handleUpadteColor(color){\r\n        this.setState({currentColor:color.hex})\r\n    }\r\n\r\n    handleNameChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value}\r\n        )\r\n    }\r\n\r\n    handleSubmitColor(){\r\n        const {newColorName,currentColor,}=this.state\r\n        const colorNew = {\r\n            name:newColorName,\r\n            color:currentColor\r\n        }\r\n        this.props.addColourToState(colorNew)\r\n        this.setState({newColorName:\"\"})\r\n    }\r\n\r\n    render() {\r\n        const {isPaletteFull,classes} = this.props\r\n        const {currentColor,newColorName} = this.state\r\n        return (\r\n            <div>\r\n            <ChromePicker \r\n                className={classes.picker}\r\n                color={currentColor} \r\n                onChangeComplete={this.handleUpadteColor}/>\r\n            <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmitColor}\r\n                >\r\n                <TextValidator\r\n                  label=\"Give Color a Name\"\r\n                  onChange={this.handleNameChange}\r\n                  className={classes.colorNameInput}\r\n                  variant='filled'\r\n                  margin='normal'\r\n                  name=\"newColorName\"\r\n                  value={newColorName}\r\n                  validators={['required', \"isColorNameUnique\",\"isColorUnique\"]}\r\n                  errorMessages={[\r\n                      \"Enter a color name\",\r\n                      \"Color name must be unique\",\r\n                      \"Color already used!\"]}\r\n                />\r\n                <Button\r\n                    disabled={isPaletteFull}\r\n                    type=\"submit\"\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    className={classes.addColor}\r\n                    style={{\r\n                      backgroundColor: isPaletteFull?\r\n                      \"grey\":\r\n                      this.state.currentColor\r\n                    }}\r\n                    // style={{background:currentColor}}\r\n                    >\r\n                    {isPaletteFull ? \"Palette Full\" : \"Add Color\"}\r\n                </Button>\r\n            </ValidatorForm>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default ColorPickerForm\r\nexport default withStyles(styles)(ColorPickerForm);","import React, { Component } from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from '@material-ui/core/Button';\r\n// import { arrayMove } from \"react-sortable-hoc\";\r\nimport  arrayMove  from \"array-move\";\r\n\r\nimport DragableColorBoxList from './DragableColorBoxList'\r\nimport PaletteFormNavbar from './PaletteFormNavbar'\r\nimport ColorPickerForm from './ColorPickerForm'\r\n// import DragableColorBox from './DragableColorBox'\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    height:\"calc(100vh - 64px)\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  container:{\r\n    width: \"90%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  buttons: {\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"50%\"\r\n  }\r\n});\r\n\r\nclass NewPaletteForm extends Component {\r\n  static defaultProps={\r\n    maxColours:20\r\n  }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            // currentColor:'orange',\r\n            // colours:[],\r\n            // colours:[{name:'blue', color:'blue'},{name:'red',color:'red'}],\r\n            colours:this.props.palettes[0].colors,\r\n            // newColorName:\"\",\r\n            newPaletteName:\"\"\r\n        };\r\n        // this.handleUpadteColor = this.handleUpadteColor.bind(this);\r\n        this.addColourToState = this.addColourToState.bind(this);\r\n        // this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSavePalete = this.handleSavePalete.bind(this);\r\n        this.deleteColor = this.deleteColor.bind(this);\r\n        this.clearPalette = this.clearPalette.bind(this);\r\n        this.addRandomColor = this.addRandomColor.bind(this);\r\n    }\r\n\r\n    deleteColor(colorName){\r\n      this.setState({\r\n        colours:this.state.colours.filter(({name})=>name.toLowerCase()!==colorName.toLowerCase())\r\n      })\r\n    }\r\n\r\n    clearPalette(){\r\n      this.setState({\r\n        colours:[]\r\n      })\r\n    }\r\n\r\n    addRandomColor(){\r\n      const allColours = this.props.palettes.map(p=>p.colors).flat()\r\n      let randomColor = allColours[Math.floor(Math.random()*allColours.length)]\r\n      this.setState(st=>({\r\n        colours:[...st.colours,randomColor]\r\n      }))\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n      this.setState({ open: true });\r\n    };\r\n  \r\n    handleDrawerClose = () => {\r\n      this.setState({ open: false });\r\n    };\r\n\r\n    // handleUpadteColor(color){\r\n    //     this.setState({currentColor:color.hex})\r\n    // }\r\n\r\n    addColourToState(colorNew){\r\n        const {colours}=this.state\r\n        // const {newColorName,currentColor,colours}=this.state\r\n        // const colorNew = {\r\n        //     name:newColorName,\r\n        //     color:currentColor\r\n        // }\r\n        this.setState({\r\n            colours:[...colours,colorNew],\r\n            newColorName:\"\"\r\n        })\r\n    }\r\n\r\n    // handleNameChange(evt){\r\n    //     this.setState({\r\n    //         [evt.target.name]:evt.target.value}\r\n    //     )\r\n    // }\r\n\r\n    handleSavePalete(newPalette){\r\n        newPalette.id=newPalette.paletteName.toLowerCase().replace(/ /g,'-');\r\n        newPalette.colors=[...this.state.colours]\r\n        this.props.savePalete(newPalette)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n      this.setState(({ colours }) => ({\r\n        colours: arrayMove(colours, oldIndex, newIndex)\r\n      }));\r\n    };\r\n\r\n    render() {\r\n      const { classes,maxColours,palettes} = this.props;\r\n      const { open ,colours} = this.state;\r\n      const isPaletteFull = colours.length>=maxColours;\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          <PaletteFormNavbar \r\n            open={open} \r\n            // classes={classes}\r\n            palettes={palettes}\r\n            handleSavePalete={this.handleSavePalete}\r\n            handleDrawerOpen={this.handleDrawerOpen}/>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.container}>\r\n            <Typography variant=\"h4\" gutterBottom>Create A Palette here</Typography>\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={this.clearPalette}\r\n                className={classes.button}\r\n                >\r\n                  Clear Palette\r\n                </Button>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={this.addRandomColor}\r\n                disabled={isPaletteFull}\r\n                className={classes.button}\r\n                >\r\n                  Random Colour\r\n                </Button>\r\n              <ColorPickerForm \r\n                isPaletteFull={isPaletteFull}\r\n                addColourToState={this.addColourToState}\r\n                colours={colours}/>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n        <main\r\n            className={classNames(classes.content, {\r\n                [classes.contentShift]: open\r\n            })}\r\n        >\r\n        <div className={classes.drawerHeader} />\r\n            <DragableColorBoxList \r\n              axis='xy'\r\n              onSortEnd={this.onSortEnd}\r\n              colours={colours} \r\n              deleteColor={this.deleteColor}\r\n              />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","import chroma from 'chroma-js';\r\nconst levels = [ 50, 100, 200, 300, 400, 500, 600, 700, 800, 900]\r\n\r\nfunction generatePalette(starterPalette) {\r\n    const {paletteName,id,emoji,colors} = starterPalette\r\n    let newPalette = {\r\n      paletteName: paletteName,\r\n      id: id,\r\n      emoji: emoji,\r\n      colors: {}\r\n    };\r\n    for (let level of levels) {\r\n      newPalette.colors[level] = [];\r\n    }\r\n    for (let color of colors) {\r\n      let scale = getScale(color.color, 10).reverse();\r\n      for (let i in scale) {\r\n        newPalette.colors[levels[i]].push({\r\n          name: `${color.name} ${levels[i]}`,\r\n          id: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n          hex: scale[i],\r\n          rgb: chroma(scale[i]).css(),\r\n          rgba: chroma(scale[i])\r\n            .css()\r\n            .replace(\"rgb\", \"rgba\")\r\n            .replace(\")\", \",1.0)\")\r\n        });\r\n      }\r\n    }\r\n    return newPalette;\r\n  }\r\n\r\n  function getRange(hexColor) {\r\n    const end = \"#fff\";\r\n    return [\r\n      chroma(hexColor)\r\n        .darken(1.4)\r\n        .hex(),\r\n      hexColor,\r\n      end\r\n    ];\r\n  }\r\n  \r\n  function getScale(hexColor, numberOfColors) {\r\n    return chroma\r\n      .scale(getRange(hexColor))\r\n      .mode(\"lab\")\r\n      .colors(numberOfColors);\r\n  }\r\n  \r\n  export { generatePalette };\r\n\r\n\r\n\r\n","import React , {Component} from 'react';\nimport './App.css';\nimport {HashRouter,Route,Switch} from 'react-router-dom'\n\nimport Palette from './Palette/Palette'\nimport PaletteList from './Palette/PaletteList'\nimport SingleColourPalette from './Palette/SingleColourPalette'\nimport NewPaletteForm from './Palette/NewPaletteForm'\n\nimport colours from  './seedColors' \nimport {generatePalette} from './Palette/ColorHelper'\n// import seedColors from './seedColors';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      palettes:colours\n    }\n    this.savePalette= this.savePalette.bind(this);\n    this.findPaletteById = this.findPaletteById.bind(this);\n  }\n\n  savePalette(newPalette){\n    this.setState({\n      palettes:[...this.state.palettes,newPalette]\n    })\n  }\n\n  findPaletteById(id){\n    return this.state.palettes.find((palette)=>{\n      return palette.id === id\n    })    \n  }\n  render () {\n    return (\n      <HashRouter basename='/'>\n      <div className=\"App\">\n        <Switch>\n\n          <Route\n            exact\n            path=\"/palette/new\"\n            render={\n              (routeProps)=>(\n                <NewPaletteForm \n                {...routeProps} \n                savePalete={this.savePalette}\n                palettes={this.state.palettes}/>\n              )\n            }\n          />\n\n          <Route\n            exact\n            path=\"/palette/:paletteId/:colorID\"\n            render={\n              (routeProps)=>(\n              <SingleColourPalette\n                {...routeProps}\n                palette={\n                  generatePalette(\n                    this.findPaletteById(routeProps.match.params.paletteId)\n                  )\n                }\n                colorId={routeProps.match.params.colorID}\n                />)\n            }\n          />\n\n          <Route\n            exact \n            path=\"/palette/:id\"  \n            render={\n              (routeProps)=>(<Palette palette={\n                generatePalette(\n                  this.findPaletteById(routeProps.match.params.id)\n                  )\n                }/>)\n              }\n          />\n\n          <Route \n            exact \n            path=\"/\" \n            render={\n              (routeProps)=><PaletteList palettes={this.state.palettes} {...routeProps}/>\n            }\n          />\n\n        </Switch>\n        {/* <Palette palette={generatePalette(colours[1])} /> */}\n      </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}